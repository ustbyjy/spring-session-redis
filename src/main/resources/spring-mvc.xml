<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com.yanwang.controller" />

    <mvc:default-servlet-handler />

    <mvc:annotation-driven />

    <context:property-placeholder location="classpath:/*.properties" ignore-unresolvable="true" />

    <!-- 创建名为springSessionRepositoryFilter的Spring Bean，继承自Filter。
         springSessionRepositoryFilter替换容器默认的HttpSession支持为Spring Session，
         将Session实例存放在Redis中. -->
    <bean class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
        <!-- 设置session过期时间，注意：使用Spring Session时在web.xml中设置session过期时间是无效的 -->
        <property name="maxInactiveIntervalInSeconds" value="3600" />
    </bean>

    <!-- 使用LettuceConnectionFactory -->
    <!--<bean class="org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory">-->
    <!--<property name="hostName" value="${redis.ip}" />-->
    <!--<property name="port" value="${redis.port}" />-->
    <!--</bean>-->

    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="minIdle" value="${redis.pool.minIdle}" />
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <property name="maxTotal" value="${redis.pool.maxTotal}" />
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
    </bean>

    <bean id="redisSentinelConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
        <constructor-arg name="master" value="${redis.sentinel.master}" />
        <constructor-arg name="sentinelHostAndPorts">
            <set>
                <value>${redis.sentinel.sentinel.1}</value>
                <value>${redis.sentinel.sentinel.2}</value>
                <value>${redis.sentinel.sentinel.3}</value>
            </set>
        </constructor-arg>
    </bean>

    <!-- 也可以将使用LettuceConnectionFactory改成使用JedisConnectionFactory，两者保留其一就好 -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy">
        <property name="poolConfig" ref="poolConfig" />
        <constructor-arg name="sentinelConfig" ref="redisSentinelConfiguration" />
    </bean>

    <!-- 让Spring Session不再执行config命令 -->
    <util:constant static-field="org.springframework.session.data.redis.config.ConfigureRedisAction.NO_OP" />

    <!-- 通用视图解析类 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/" />
        <property name="suffix" value=".jsp" />
    </bean>
</beans>